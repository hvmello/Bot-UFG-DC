spring.profiles.active=dev
server.port=8083
server.servlet.context-path=/telegrambot


#Adpater Keycloak
keycloak.auth-server-url=https://auth.adriano.website/auth
keycloak.realm=dc_auth
keycloak.resource=codec-cli
keycloak.public-client=false
keycloak.bearer-only=true
keycloak.principal-attribute=preferred_username
keycloak.credentials.secret=90422cf8-6989-49d0-94b3-a84a0e12cdb3
keycloak.use-resource-role-mappings= true
codec.service.keycloakDC  = https://auth.adriano.website/auth/realms/dc_auth/protocol/openid-connect



# DataBase Config
spring.main.allow-bean-definition-overriding=true
spring.jpa.database=POSTGRESQL
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQL95Dialect
spring.datasource.platform=postgres
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults=false
spring.jpa.hibernate.ddl-auto=update
spring.database.driverClassName=org.postgresql.Driver
spring.jackson.serialization.WRITE_DATES_AS_TIMESTAMPS=false


# Hikari will use the above plus the following to setup connection pooling
spring.datasource.hikari.minimumIdle=5
spring.datasource.hikari.maximumPoolSize=20
spring.datasource.hikari.idleTimeout=30000
spring.datasource.hikari.poolName=TelegramSpringBootJPAHikariCP
spring.datasource.hikari.maxLifetime=2000000
spring.datasource.hikari.connectionTimeout=30000
